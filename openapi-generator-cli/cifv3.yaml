openapi: 3.0.0
# https://github.com/csirtgadgets/bearded-avenger-deploymentkit/wiki/REST-API
#{
#   "DELETE /tokens?{username,token}": "delete a token or set of tokens", 
#      New-TokensDeleteBody
#      Invoke-TokenApiDeleteToken
#   "GET /": "this message", 
#        Invoke-HelpApiGetHelp
#   "GET /feed?{q,limit,itype,confidence,tags,reporttime}": "filter for a data-set, aggregate and apply respective whitelist", 
#       Invoke-IndicatorsApiGetFeed
#   "GET /help": "this message", 
#        Invoke-HelpApiGetHelp
#   "GET /help/confidence": "get a list of the defined confidence values", 
#        Invoke-HelpApiGetHelpConfidence
#   "GET /indicators?{q,limit,indicator,confidence,tags,reporttime}": "search for a set of indicators", 
#        Invoke-IndicatorsApiGetIndicators
#   "GET /ping": "ping the router interface", 
#       Invoke-HealthApiGetPing
#   "GET /search?{q,limit,itype,indicator,confidence,tags,reporttime}": "search for an indicator", 
#       Invoke-IndicatorsApiGetSearch
#   "GET /tokens?{username,token}": "search for a set of tokens", 
#       Invoke-TokenApiGetToken
#   "GET /u": "browser friendly ui [login with api token]", 
#   "PATCH /token": "update a token", 
#       New-TokensUpdateBody
#       Invoke-TokenApiUpdateToken
#   "POST /indicators": "post indicators to the router", 
#       New-IndicatorRequestBody
#       Invoke-IndicatorsApiCreateIndicators
#   "POST /tokens": "create a token or set of tokens"
#       New-TokensRequestBody
#       Invoke-TokenApiCreateTokens
#}
info:
  version: 0.0.2
  title: CIFv3 API
  description: The CIFv3 REST API
servers:
  - url: 'https://v3.cif.local'
paths:
  /help:
    get:
      description: |
        get list of API routes
      operationId: get_help
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryString'
              example:
                'DELETE /tokens?{username,token}': delete a token or set of tokens
                GET /: this message
                'GET /feed?{q,limit,itype,confidence,tags,reporttime}': 'filter for a data-set, aggregate and apply respective whitelist'
                GET /help: this message
                GET /help/confidence: get a list of the defined confidence values
                'GET /indicators?{q,limit,indicator,confidence,tags,reporttime}': search for a set of indicators
                GET /ping: ping the router interface
                'GET /search?{q,limit,itype,indicator,confidence,tags,reporttime}': search for an indicator
                'GET /tokens?{username,token}': search for a set of tokens
                GET /u: 'browser friendly ui [login with api token]'
                PATCH /token: update a token
                POST /indicators: post indicators to the router
                POST /tokens: create a token or set of tokens
      tags:
        - help
  /help/confidence:
    get:
      description: |
        get a list of the defined confidence values
      operationId: get_help_confidence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryString'
              example:
                '0': Unknown
                '1': Unknown
                '2': Unknown
                '3': Not Confident
                '4': Slightly worse than a coin flip
                '5': Coin Flip
                '6': Slightly better than a coin flip
                '7': Confident
                '8': Very Confident
                '9': Highly Confident
                '10': Certain
      tags:
        - help
  /search:
    get:
      description: |
        search for an indicator
      operationId: get_search
      security:
        - AuthorizationApiKeyHeader: []
      parameters:
        - name: q
          in: query
          description: The observable to query for.
          schema:
            type: string
        - name: itype
          in: query
          description: '(ipv4, ipv6, fqdn, url, email, md5, sha1, sha256)'
          schema:
            type: string
        - name: nolog
          in: query
          description: Do NOT log the query
          schema:
            type: integer
            default: 0
        - name: indicator
          in: query
          description: The observable to query for
          schema:
            type: string
        - name: cc
          in: query
          description: The country code to filter on
          schema:
            type: string
        - name: asn
          in: query
          description: The ASN to filter on
          schema:
            type: number
        - name: confidence
          in: query
          description: The confidence (or greater) to filter on
          schema:
            type: number
            default: 8
        - name: group
          in: query
          description: The group(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: The tag(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: provider
          in: query
          description: The provider(s) to filter on (CSV accepted as AND)
          schema:
            type: array
            items:
              type: string
        - name: description
          in: query
          description: Text description of the observable
          schema:
            type: string
        - name: rdata
          in: query
          description: 'Related data: used mainly by cif-worker when re-injecting intelligence'
          schema:
            type: string
        - name: reporttime
          in: query
          description: 'Reported timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: firsttime
          in: query
          description: 'First seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: lasttime
          in: query
          description: 'Last seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Less than or equal to'
          schema:
            type: string
        - name: limit
          in: query
          description: limit the results returned
          schema:
            type: integer
            format: int64
            default: 500
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorItemArray'
              example:
                status: success
                data:
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108466
                    city: null
                    indicator: 'http://app.badsite.local/app1/app2'
                    reporttime: '2019-02-14T15:07:21.697405Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: other
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-13T10:33:46.000000Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-13T10:33:46.000000Z'
                    region: null
                    longitude: null
                    additional_data: '[{"detail_time": "2019-02-13T10:35:45+00:00", "country": "US", "rir": "arin", "announcing_network": "32475", "cidr_block": "127.0.0.0/18", "ip_address": "127.0.0.12"}]'
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108465
                    city: null
                    indicator: 'http://badsite.local/it/app1/app2/app3/app4.htm'
                    reporttime: '2019-02-14T15:01:05.120419Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: null
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-14T15:01:05.885049Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-14T15:01:05.885049Z'
                    region: null
                    longitude: null
                    additional_data: null
      tags:
        - indicators
  /indicators:
    get:
      description: |
        search for a set of indicators
      operationId: get_indicators
      security:
        - AuthorizationApiKeyHeader: []
      parameters:
        - name: q
          in: query
          description: The observable to query for.
          schema:
            type: string
        - name: itype
          in: query
          description: '(ipv4, ipv6, fqdn, url, email, md5, sha1, sha256)'
          schema:
            type: string
        - name: nolog
          in: query
          description: Do NOT log the query
          schema:
            type: integer
            default: 0
        - name: indicator
          in: query
          description: The observable to query for
          schema:
            type: string
        - name: cc
          in: query
          description: The country code to filter on
          schema:
            type: string
        - name: asn
          in: query
          description: The ASN to filter on
          schema:
            type: number
        - name: confidence
          in: query
          description: The confidence (or greater) to filter on
          schema:
            type: number
            default: 8
        - name: group
          in: query
          description: The group(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: The tag(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: provider
          in: query
          description: The provider(s) to filter on (CSV accepted as AND)
          schema:
            type: array
            items:
              type: string
        - name: description
          in: query
          description: Text description of the observable
          schema:
            type: string
        - name: rdata
          in: query
          description: 'Related data: used mainly by cif-worker when re-injecting intelligence'
          schema:
            type: string
        - name: reporttime
          in: query
          description: 'Reported timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: firsttime
          in: query
          description: 'First seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: lasttime
          in: query
          description: 'Last seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Less than or equal to'
          schema:
            type: string
        - name: limit
          in: query
          description: limit the results returned
          schema:
            type: integer
            format: int64
            default: 500
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorItemArray'
              example:
                status: success
                data:
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108466
                    city: null
                    indicator: 'http://app.badsite.local/app1/app2'
                    reporttime: '2019-02-14T15:07:21.697405Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: other
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-13T10:33:46.000000Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-13T10:33:46.000000Z'
                    region: null
                    longitude: null
                    additional_data: '[{"detail_time": "2019-02-13T10:35:45+00:00", "country": "US", "rir": "arin", "announcing_network": "32475", "cidr_block": "127.0.0.0/18", "ip_address": "127.0.0.12"}]'
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108465
                    city: null
                    indicator: 'http://badsite.local/it/app1/app2/app3/app4.htm'
                    reporttime: '2019-02-14T15:01:05.120419Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: null
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-14T15:01:05.885049Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-14T15:01:05.885049Z'
                    region: null
                    longitude: null
                    additional_data: null
      tags:
        - indicators
    post:
      description: |
        post indicators to the router
      operationId: create_indicators
      security:
        - AuthorizationApiKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorRequestBody'
            example:
              indicator: example.com
              group: everyone
              provider: me@me.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataObjectMessage'
              example:
                message: success
                data: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataObjectMessage'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataObjectMessage'
      tags:
        - indicators
  /feed:
    get:
      description: |
        filter for a data-set, aggregate and apply respective whitelist
      operationId: get_feed
      security:
        - AuthorizationApiKeyHeader: []
      parameters:
        - name: q
          in: query
          description: The observable to query for.
          schema:
            type: string
        - name: itype
          in: query
          description: '(ipv4, ipv6, fqdn, url, email, md5, sha1, sha256)'
          schema:
            type: string
          required: true
        - name: nolog
          in: query
          description: Do NOT log the query
          schema:
            type: integer
            default: 0
        - name: indicator
          in: query
          description: The observable to query for
          schema:
            type: string
        - name: cc
          in: query
          description: The country code to filter on
          schema:
            type: string
        - name: asn
          in: query
          description: The ASN to filter on
          schema:
            type: number
        - name: confidence
          in: query
          description: The confidence (or greater) to filter on
          schema:
            type: number
            default: 8
        - name: group
          in: query
          description: The group(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: The tag(s) to filter on (CSV accepted as OR)
          schema:
            type: array
            items:
              type: string
        - name: provider
          in: query
          description: The provider(s) to filter on (CSV accepted as AND)
          schema:
            type: array
            items:
              type: string
        - name: description
          in: query
          description: Text description of the observable
          schema:
            type: string
        - name: rdata
          in: query
          description: 'Related data: used mainly by cif-worker when re-injecting intelligence'
          schema:
            type: string
        - name: reporttime
          in: query
          description: 'Reported timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: firsttime
          in: query
          description: 'First seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Greater than or equal to'
          schema:
            type: string
        - name: lasttime
          in: query
          description: 'Last seen machine generated timestamp, (YYYY-MM-DDTHH:MM:SSZ) - Less than or equal to'
          schema:
            type: string
        - name: limit
          in: query
          description: limit the results returned
          schema:
            type: integer
            format: int64
            default: 500
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorItemArray'
              example:
                status: success
                data:
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108466
                    city: null
                    indicator: 'http://app.badsite.local/app1/app2'
                    reporttime: '2019-02-14T15:07:21.697405Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: other
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-13T10:33:46.000000Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-13T10:33:46.000000Z'
                    region: null
                    longitude: null
                    additional_data: '[{"detail_time": "2019-02-13T10:35:45+00:00", "country": "US", "rir": "arin", "announcing_network": "32475", "cidr_block": "127.0.0.0/18", "ip_address": "127.0.0.12"}]'
                  - itype: url
                    cc: null
                    timezone: null
                    protocol: tcp
                    message: []
                    id: 108465
                    city: null
                    indicator: 'http://badsite.local/it/app1/app2/app3/app4.htm'
                    reporttime: '2019-02-14T15:01:05.120419Z'
                    group: everyone
                    asn_desc: null
                    provider: phish.local
                    latitude: null
                    description: null
                    tags:
                      - phishing
                    portlist: None
                    confidence: 9
                    rdata: null
                    lasttime: '2019-02-14T15:01:05.885049Z'
                    asn: null
                    count: 1
                    peers: null
                    tlp: green
                    firsttime: '2019-02-14T15:01:05.885049Z'
                    region: null
                    longitude: null
                    additional_data: null
      tags:
        - indicators
  /ping:
    get:
      description: |
      operationId: get_ping
      security:
        - AuthorizationApiKeyHeader: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBooleanMessage'
              example:
                data: true
                message: success
      tags:
        - health
  /tokens:
    get:
      description: |
        search for a set of tokens
      operationId: get_token
      security:
        - AuthorizationApiKeyHeader: []
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: token
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenItemArray'
              example:
                data:
                  - acl: null
                    admin: true
                    expires: null
                    groups:
                      - everyone
                    id: 1
                    last_activity_at: 1550249711
                    read: true
                    revoked: null
                    token: abcdef0123456
                    username: admin
                    write: true
                  - acl: null
                    admin: null
                    expires: null
                    groups:
                      - everyone
                    id: 2
                    last_activity_at: 1550243883
                    read: null
                    revoked: null
                    token: abcdef0123456
                    username: csirtg-smrt
                    write: true
                message: success
      tags:
        - token
    post:
      description: |
        create a token or set of tokens
      operationId: create_tokens
      security:
        - AuthorizationApiKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokensRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTokenMessage'
              example:
                data:
                  acl: ipv4
                  admin: false
                  expires: null
                  groups:
                    - everyone
                  id: 1
                  last_activity_at: null
                  read: true
                  revoked: null
                  token: abcdef0123456
                  username: test
                  write: null
                message: success
      tags:
        - token
    delete:
      description: |
        delete a token or set of tokens
        NOTE: editor.swagger.io says semantic error, DELETE operations cannot have a requestBody.
      operationId: delete_token
      security:
        - AuthorizationApiKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokensDeleteBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataObjectMessage'
              example:
                message: success
                data: 0
      tags:
        - token
    patch:
      description: |
        update a token
      operationId: update_token
      security:
        - AuthorizationApiKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokensUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBooleanMessage'
              example:
                message: success
                data: 0
      tags:
        - token
tags:
  - name: help
    description: Help related operations
  - name: indicators
    description: Indicator related operations
  - name: health
    description: Health related operations
  - name: token
    description: Token related operations
components:
  securitySchemes:
    AuthorizationApiKeyHeader:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    DictionaryString:
      type: object
      additionalProperties:
        type: string
    DataObjectMessage:
      properties:
        data:
          type: object
        message:
          type: string
      type: object
    DataBooleanMessage:
      properties:
        data:
          type: boolean
        message:
          type: string
      type: object
    DataTokenMessage:
      properties:
        data:
          $ref: '#/components/schemas/TokenItem'
        message:
          type: string
      type: object
    IndicatorItemArray:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorItem'
        status:
          type: string
      type: object
    IndicatorItem:
      properties:
        itype:
          type: string
        cc:
          type: string
        timezone:
          type: string
        protocol:
          type: string
        message:
          items:
            type: string
          type: array
        id:
          type: number
        city:
          type: string
        indicator:
          type: string
        reporttime:
          type: string
        group:
          type: string
        asn_desc:
          type: string
        provider:
          type: string
        latitude:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        portlist:
          type: string
        confidence:
          type: number
        rdata:
          type: string
        lasttime:
          type: string
        asn:
          type: string
        count:
          type: number
        peers:
          type: string
        tlp:
          type: string
        firsttime:
          type: string
        region:
          type: string
        longitude:
          type: string
        additional_data:
          type: string
      type: object
    IndicatorRequestBody:
      properties:
        indicator:
          type: string
        tags:
          type: array
          items:
            type: string
        confidence:
          type: number
          default: 0
        group:
          type: string
        tlp:
          type: string
        provider:
          type: string
      type: object
    TokensRequestBody:
      properties:
        username:
          type: string
        admin:
          type: boolean
          default: false
        # **TODO** **NOT WORKING**
        # YYYY-MM-DDTHH:MM:ss
        # Anything but a NULL string causes 503 Service Unavailable in bearded-avenger.
        # Same happens when using cli cif-tokens.
        # Can only recover by sudo service cif-router restart or restarting server.
        #expires:
        #  type: string
        #  nullable: true
        read:
          type: boolean
          default: true
        revoked:
          type: boolean
          default: false
        write:
          type: boolean
          default: false
        groups:
          type: array
          items:
            type: string
        acl:
          type: string
          nullable: true
      type: object
    TokenItem:
      properties:
        acl:
          type: string
        admin:
          type: boolean
        expires:
          type: integer
        groups:
          items:
            type: string
          type: array
        id:
          type: integer
        last_activity_at:
          type: integer
        read:
          type: boolean
        revoked:
          type: boolean
        token:
          type: string
        username:
          type: string
        write:
          type: boolean
      type: object
    TokenItemArray:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TokenItem'
        message:
          type: string
      type: object
    TokensDeleteBody:
      properties:
        username:
          type: string
        token:
          type: string
      type: object
    TokensUpdateBody:
      properties:
        token:
          type: string
        groups:
          items:
            type: string
          type: array
      type: object
